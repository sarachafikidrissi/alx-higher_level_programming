==================================================
'Test for 1-my_list.txt module'
==================================================
'Function to test: print_sorted(self)
==================================================

>>> MyList = __import__('1-my_list').MyList

'A list Is empty'
>>> my_list = MyList()
>>> my_list.print_sorted()
[]

'A list of integer'
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

'A list of tuple'

>>> my_list = MyList()
>>> my_list.append((10, 14))
>>> my_list.append((5, 7))
>>> my_list.append((1, 2))
>>> my_list.print_sorted()
[(1, 2), (5, 7), (10, 14)]

'A lis of lists'
>>> my_list = MyList()
>>> my_list.append([15, 25, 20])
>>> my_list.append([7, 8, 9])
>>> my_list.append([12, 13, 14])
>>> my_list.print_sorted()
[[7, 8, 9], [12, 13, 14], [15, 25, 20]]

'A list of boolean'
>>> my_list = MyList()
>>> my_list.append(True)
>>> my_list.append(True)
>>> my_list.append(False)
>>> my_list.append(False)
>>> my_list.append(True)
>>> my_list.append(True)
>>> my_list.append(True)
>>> my_list.print_sorted()
[False, False, True, True, True, True, True]

'A list of strings'
>>> my_list = MyList()
>>> my_list.append('Much')
>>> my_list.append('Montes')
>>> my_list.append('Meco')
>>> my_list.append('Hola')
>>> my_list.print_sorted()
['Hola', 'Meco', 'Montes', 'Much']

'One argumet in print_sorted'
>>> my_list = MyList()
>>> my_list.print_sorted(6)
Traceback (most recent call last):
...
TypeError: print_sorted() takes 1 positional argument but 2 were given

'module docstring'
>>> m = __import__("1-my_list").__doc__
>>> len(m) > 1
True

'class docstring'
>>> c = __import__("1-my_list").MyList.__doc__
>>> len(c) > 1
True

'method docstring'
>>> f = __import__("1-my_list").MyList.print_sorted.__doc__
>>> len(f) > 1
True

'A list elements of different type'
>>> my_list = MyList()
>>> my_list.append(True)
>>> my_list.append(3)
>>> my_list.append(2.87)
>>> my_list.append('Hola')
>>> my_list.print_sorted()
Traceback (most recent call last):
...
TypeError: '<' not supported between instances of 'str' and 'float'
